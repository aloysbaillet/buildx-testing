name: Docker Image CI

on: [push]

jobs:

  build_imageA:
 
    runs-on: ubuntu-latest
 
    steps:
    -
      name: Checkout
      uses: actions/checkout@v1
    -
      name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@master
      with:
        version: latest
    -
      name: Run Buildx
      run: |
        docker buildx create --name cacheable --use
        mkdir buildkit-cache-a
        # buildx-testing-image-a
        docker buildx build \
          . \
          -t aloysbaillet/buildx-testing-image-a:0 \
          --target=buildx-testing-image-a \
          --load
        docker run --rm \
          --volumes-from buildx_buildkit_cacheable0 \
          -v $(pwd)/buildkit-cache-a:/backup \
          alpine /bin/sh -c "cd / && tar cf /backup/backup.tar.gz /var/lib/buildkit"
    -
      name: Upload docker-cache
      uses: actions/upload-artifact@v1
      with:
        name: buildkit-cache-a
        path: buildkit-cache-a

  build_imageB:
 
    runs-on: ubuntu-latest
    needs: build_imageA

    steps:
    -
      name: Checkout
      uses: actions/checkout@v1
    -
      name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@master
      with:
        version: latest
    -
      name: Download docker cache
      uses: actions/download-artifact@v1
      with:
        name: buildkit-cache-a
    -
      name: Restore BuildKit Instance
      run: |
        docker buildx create --name cacheable --use
        docker buildx inspect --bootstrap
        docker buildx stop
        docker run --rm \
          --volumes-from buildx_buildkit_cacheable0 \
          -v $(pwd)/buildkit-cache-a:/backup \
          alpine /bin/sh -c "cd / && tar xf /backup/backup.tar.gz"
    -
      name: Run Buildx
      run: |
        # buildx-testing-image-b
        docker buildx build \
          . \
          -t aloysbaillet/buildx-testing-image-b:0 \
          --target=buildx-testing-image-b \
          --load        
    -
      name: Save new BuildKit instance
      run: |
        mkdir buildkit-cache-b
        docker run --rm \
          --volumes-from buildx_buildkit_cacheable0 \
          -v $(pwd)/buildkit-cache-b:/backup \
          alpine /bin/sh -c "cd / && tar cf /backup/backup.tar.gz /var/lib/buildkit"
    -
      name: Upload docker-cache
      uses: actions/upload-artifact@v1
      with:
        name: docker-cache-b
        path: docker-cache-b
